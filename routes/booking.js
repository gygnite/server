'use strict';

const router = require('express').Router();
const Promise = require('bluebird');
const Message = require('../db/Message.model');
const Timeslot = require('../db/Timeslots.model');




router.post('/', function(req, res) {
    var userId = req.user.id;
    var details = req.body;

    console.log("req.query!", req.query);
    console.log("body!", req.body);

    var sender = req.query.sender;
    var receiver = req.query.receiver;
    var originType = req.query.originType;

    Timeslot.create(details, userId)
    .then(sendAutogeneratedMessage)
    .then(function(data) {
        //created successfully!
        res.status(200).json({
            timeslot: data[0],
            message: data[1],
            success: true
        });

    }).catch(function(err) {
        console.log("err!", err);
        //unsuccessful
        // FIXME: Unsuccessful timestamp creation
        res.json({
            success: false,
            err: err
        });
    });


    function sendAutogeneratedMessage(timeslot) {
        var message = {
            user_id: userId,
            content: details.message,
            timeslot_id: timeslot.id
        };
        if (originType === 'bands') {
            message.band_id = sender,
            message.venue_id = receiver
        } else if (originType === 'venues') {
            message.venue_id = sender,
            message.band_id = receiver
        } else {
            //error!
        }


        return Promise.join(
            timeslot,
            Message.createAutogenerated(originType, message)
        );
    }

});



router.get('/:id', function(req, res) {
    var user = req.user;

    // FIXME: Check timeslot authentication
    //check if user has authentication to view and access booking


    Timeslot.fetchById(req.params.id)
        .then(function(timeslot) {
            Timeslot.findRelatedTimelots(timeslot).then(function(related) {
                res.json({
                    success: true,
                    timeslots: related
                });
            });
        }).catch(function(err) {
            console.error("ERROR!", err);
        });
});


router.put('/:vid/:bid', function(req, res) {
    var bandId = req.params.bid;
    var venueId = req.params.vid;
    var status = req.body.status;
    var date = req.body.date;
    console.log("body", req.body)
    if (status === 'accepted' || status === 'rejected') {
        Timeslot.updateAcceptedRejected(status, venueId, bandId, date)
        .then(function(updated) {
            res.json({
                timeslot: updated
            });
        }).catch(function(err) {
            // FIXME: Error for update timeslot
            console.error('ERR', err);
        });
    }
});



module.exports = router;
